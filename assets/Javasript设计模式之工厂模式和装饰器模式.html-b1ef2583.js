const e=JSON.parse('{"key":"v-6ade18b9","path":"/posts/Design%20patterns/Javasript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F.html","title":"工厂模式和装饰器模式","lang":"zh-CN","frontmatter":{"date":"2022-03-22T00:00:00.000Z","title":"工厂模式和装饰器模式","icon":"tag","order":2,"category":["Design patterns"],"tag":["技术分享"],"description":"工厂模式和装饰器模式 前言 前面分享了四个设计模式，分别是策略模式、观察者模式、状态模式以及代理模式，其中前三个都属于设计模式中的行为模式，最后一个为结构型模式。那么其实到目前为止，我们还没有接触过创建型模式。 在这里引入23个设计模式的分类，它总体分被为三大类：行为型模式、结构型模式、创建型模式。 简言之， 创建型模式——关注于分离对象的创建和使用 结构型模式——描述如何将类或者对象结合在一起形成更大的结构 行为型模式——不仅仅关注类和对象的结构，而且重点关注它们之间的相互作用","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/kiki/posts/Design%20patterns/Javasript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Kiki"}],["meta",{"property":"og:title","content":"工厂模式和装饰器模式"}],["meta",{"property":"og:description","content":"工厂模式和装饰器模式 前言 前面分享了四个设计模式，分别是策略模式、观察者模式、状态模式以及代理模式，其中前三个都属于设计模式中的行为模式，最后一个为结构型模式。那么其实到目前为止，我们还没有接触过创建型模式。 在这里引入23个设计模式的分类，它总体分被为三大类：行为型模式、结构型模式、创建型模式。 简言之， 创建型模式——关注于分离对象的创建和使用 结构型模式——描述如何将类或者对象结合在一起形成更大的结构 行为型模式——不仅仅关注类和对象的结构，而且重点关注它们之间的相互作用"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-02T01:14:42.000Z"}],["meta",{"property":"article:author","content":"Miss.Kiki"}],["meta",{"property":"article:tag","content":"技术分享"}],["meta",{"property":"article:published_time","content":"2022-03-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-02T01:14:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"工厂模式和装饰器模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-02T01:14:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Miss.Kiki\\",\\"url\\":\\"https://someqq.github.io/kiki/\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[{"level":3,"title":"构造器","slug":"构造器","link":"#构造器","children":[]},{"level":3,"title":"工厂模式","slug":"工厂模式-1","link":"#工厂模式-1","children":[]},{"level":3,"title":"应用实例","slug":"应用实例","link":"#应用实例","children":[]}]},{"level":2,"title":"装饰器模式","slug":"装饰器模式","link":"#装饰器模式","children":[{"level":3,"title":"装饰器","slug":"装饰器","link":"#装饰器","children":[]},{"level":3,"title":"装饰器工厂","slug":"装饰器工厂","link":"#装饰器工厂","children":[]},{"level":3,"title":"装饰器模式的应用","slug":"装饰器模式的应用","link":"#装饰器模式的应用","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1688200233000,"updatedTime":1688260482000,"contributors":[{"name":"guoyiqi","email":"guoyiqi@uino.com","commits":2}]},"readingTime":{"minutes":15.91,"words":4774},"filePathRelative":"posts/Design patterns/Javasript设计模式之工厂模式和装饰器模式.md","localizedDate":"2022年3月22日","excerpt":"<h1> 工厂模式和装饰器模式</h1>\\n<h2> 前言</h2>\\n<p>前面分享了四个设计模式，分别是策略模式、观察者模式、状态模式以及代理模式，其中前三个都属于设计模式中的行为模式，最后一个为结构型模式。那么其实到目前为止，我们还没有接触过创建型模式。</p>\\n<p>在这里引入23个设计模式的分类，它总体分被为三大类：行为型模式、结构型模式、创建型模式。</p>\\n<p>简言之，</p>\\n<ul>\\n<li>创建型模式——关注于分离对象的创建和使用</li>\\n<li>结构型模式——描述如何将类或者对象结合在一起形成更大的结构</li>\\n<li>行为型模式——不仅仅关注类和对象的结构，而且重点关注它们之间的相互作用</li>\\n</ul>","autoDesc":true}');export{e as data};
