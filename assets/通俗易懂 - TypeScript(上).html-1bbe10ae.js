const e=JSON.parse('{"key":"v-efac899a","path":"/posts/TypeScript/%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82%20-%20TypeScript(%E4%B8%8A).html","title":"TypeScript-基础类型","lang":"zh-CN","frontmatter":{"date":"2021-09-11T00:00:00.000Z","title":"TypeScript-基础类型","icon":"tag","order":2,"category":["TypeScript"],"tag":["技术分享"],"description":"基本类型 前言 如今TypesScript已经越来越火，不管是服务端（Node.js）,还是前端框架（React、Vue、Angular），都有越来越多的项目使用TS进行开发，作为前端程序员，TS已经成为一项必不可少的技能。本文主要介绍一些TS的基础知识，带大家入门TS。 TypeScript是什么？ 1、TypeScript是由微软开发的以JavaScript为基础的编程语言。 2、它是JavaScript的一个超集，js是ts的子集； 3、TS可以在任何支持JS的平台上执行； 4、TS不能被JS解析器直接执行，需要编译成JS才可以执行； 5、TS在原先JS基础扩展了JS,并新增了许多变量类型，比如元组、枚举类型等等。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/kiki/posts/TypeScript/%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82%20-%20TypeScript(%E4%B8%8A).html"}],["meta",{"property":"og:site_name","content":"Kiki"}],["meta",{"property":"og:title","content":"TypeScript-基础类型"}],["meta",{"property":"og:description","content":"基本类型 前言 如今TypesScript已经越来越火，不管是服务端（Node.js）,还是前端框架（React、Vue、Angular），都有越来越多的项目使用TS进行开发，作为前端程序员，TS已经成为一项必不可少的技能。本文主要介绍一些TS的基础知识，带大家入门TS。 TypeScript是什么？ 1、TypeScript是由微软开发的以JavaScript为基础的编程语言。 2、它是JavaScript的一个超集，js是ts的子集； 3、TS可以在任何支持JS的平台上执行； 4、TS不能被JS解析器直接执行，需要编译成JS才可以执行； 5、TS在原先JS基础扩展了JS,并新增了许多变量类型，比如元组、枚举类型等等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-02T01:14:42.000Z"}],["meta",{"property":"article:author","content":"Miss.Kiki"}],["meta",{"property":"article:tag","content":"技术分享"}],["meta",{"property":"article:published_time","content":"2021-09-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-02T01:14:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript-基础类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-09-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-02T01:14:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Miss.Kiki\\",\\"url\\":\\"https://someqq.github.io/kiki/\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"TypeScript是什么？","slug":"typescript是什么","link":"#typescript是什么","children":[]},{"level":2,"title":"基础类型","slug":"基础类型","link":"#基础类型","children":[]},{"level":2,"title":"TypeScript断言","slug":"typescript断言","link":"#typescript断言","children":[{"level":3,"title":"类型断言","slug":"类型断言","link":"#类型断言","children":[]},{"level":3,"title":"非空断言","slug":"非空断言","link":"#非空断言","children":[]},{"level":3,"title":"可选链运算符 ?.","slug":"可选链运算符","link":"#可选链运算符","children":[]},{"level":3,"title":"空值合并运算符 ??","slug":"空值合并运算符","link":"#空值合并运算符","children":[]}]},{"level":2,"title":"TypeScript 函数","slug":"typescript-函数","link":"#typescript-函数","children":[{"level":3,"title":"函数定义","slug":"函数定义","link":"#函数定义","children":[]},{"level":3,"title":"参数类型和返回类型","slug":"参数类型和返回类型","link":"#参数类型和返回类型","children":[]},{"level":3,"title":"可选参数及默认参数","slug":"可选参数及默认参数","link":"#可选参数及默认参数","children":[]},{"level":3,"title":"剩余参数","slug":"剩余参数","link":"#剩余参数","children":[]},{"level":3,"title":"函数重载","slug":"函数重载","link":"#函数重载","children":[]}]},{"level":2,"title":"TypeScript 类","slug":"typescript-类","link":"#typescript-类","children":[{"level":3,"title":"类的属性与方法","slug":"类的属性与方法","link":"#类的属性与方法","children":[]},{"level":3,"title":"类的修饰符","slug":"类的修饰符","link":"#类的修饰符","children":[]},{"level":3,"title":"访问器","slug":"访问器","link":"#访问器","children":[]},{"level":3,"title":"类的静态属性、静态方法","slug":"类的静态属性、静态方法","link":"#类的静态属性、静态方法","children":[]},{"level":3,"title":"类的继承","slug":"类的继承","link":"#类的继承","children":[]},{"level":3,"title":"抽象类","slug":"抽象类","link":"#抽象类","children":[]}]},{"level":2,"title":"TypeScript 接口","slug":"typescript-接口","link":"#typescript-接口","children":[{"level":3,"title":"对象的形状","slug":"对象的形状","link":"#对象的形状","children":[]},{"level":3,"title":"可选 | 只读属性","slug":"可选-只读属性","link":"#可选-只读属性","children":[]},{"level":3,"title":"任意属性","slug":"任意属性","link":"#任意属性","children":[]},{"level":3,"title":"类实现接口","slug":"类实现接口","link":"#类实现接口","children":[]},{"level":3,"title":"接口继承接口","slug":"接口继承接口","link":"#接口继承接口","children":[]},{"level":3,"title":"接口继承类","slug":"接口继承类","link":"#接口继承类","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1687836497000,"updatedTime":1688260482000,"contributors":[{"name":"guoyiqi","email":"guoyiqi@uino.com","commits":2}]},"readingTime":{"minutes":19.2,"words":5759},"filePathRelative":"posts/TypeScript/通俗易懂 - TypeScript(上).md","localizedDate":"2021年9月11日","excerpt":"<h1> 基本类型</h1>\\n<h2> 前言</h2>\\n<p>如今TypesScript已经越来越火，不管是服务端（Node.js）,还是前端框架（React、Vue、Angular），都有越来越多的项目使用TS进行开发，作为前端程序员，TS已经成为一项必不可少的技能。本文主要介绍一些TS的基础知识，带大家入门TS。</p>\\n<h2> TypeScript是什么？</h2>\\n<p>1、TypeScript是由微软开发的以JavaScript为基础的编程语言。\\n2、它是JavaScript的一个超集，js是ts的子集；\\n3、TS可以在任何支持JS的平台上执行；\\n4、TS不能被JS解析器直接执行，需要编译成JS才可以执行；\\n5、TS在原先JS基础扩展了JS,并新增了许多变量类型，比如元组、枚举类型等等。\\n<img src=\\"https://pan.udolphin.com/files/image/2021/9/2acb0b7cfd7a7488b1b6ceb537df172e.png\\" alt=\\"\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{e as data};
